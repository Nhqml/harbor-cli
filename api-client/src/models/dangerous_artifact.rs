/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// DangerousArtifact : the dangerous artifact information

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DangerousArtifact {
    /// the project id of the artifact
    #[serde(rename = "project_id", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<i64>,
    /// the repository name of the artifact
    #[serde(rename = "repository_name", skip_serializing_if = "Option::is_none")]
    pub repository_name: Option<String>,
    /// the digest of the artifact
    #[serde(rename = "digest", skip_serializing_if = "Option::is_none")]
    pub digest: Option<String>,
    /// the count of critical vulnerabilities
    #[serde(rename = "critical_cnt", skip_serializing_if = "Option::is_none")]
    pub critical_cnt: Option<i32>,
    /// the count of high vulnerabilities
    #[serde(rename = "high_cnt", skip_serializing_if = "Option::is_none")]
    pub high_cnt: Option<i64>,
    /// the count of medium vulnerabilities
    #[serde(rename = "medium_cnt", skip_serializing_if = "Option::is_none")]
    pub medium_cnt: Option<i32>,
}

impl DangerousArtifact {
    /// the dangerous artifact information
    pub fn new() -> DangerousArtifact {
        DangerousArtifact {
            project_id: None,
            repository_name: None,
            digest: None,
            critical_cnt: None,
            high_cnt: None,
            medium_cnt: None,
        }
    }
}
