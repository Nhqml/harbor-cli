/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// RegistryInfo : The registry info contains the base info and capability declarations of the registry

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RegistryInfo {
    /// The registry type
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// The description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The filters that the registry supports
    #[serde(
        rename = "supported_resource_filters",
        skip_serializing_if = "Option::is_none"
    )]
    pub supported_resource_filters: Option<Vec<crate::models::FilterStyle>>,
    /// The triggers that the registry supports
    #[serde(rename = "supported_triggers", skip_serializing_if = "Option::is_none")]
    pub supported_triggers: Option<Vec<String>>,
    /// The registry whether support copy by chunk.
    #[serde(
        rename = "supported_copy_by_chunk",
        skip_serializing_if = "Option::is_none"
    )]
    pub supported_copy_by_chunk: Option<bool>,
}

impl RegistryInfo {
    /// The registry info contains the base info and capability declarations of the registry
    pub fn new() -> RegistryInfo {
        RegistryInfo {
            r#type: None,
            description: None,
            supported_resource_filters: None,
            supported_triggers: None,
            supported_copy_by_chunk: None,
        }
    }
}
