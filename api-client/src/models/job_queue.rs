/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// JobQueue : the job queue info

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobQueue {
    /// The type of the job queue
    #[serde(rename = "job_type", skip_serializing_if = "Option::is_none")]
    pub job_type: Option<String>,
    /// The count of jobs in the job queue
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    /// The latency the job queue (seconds)
    #[serde(rename = "latency", skip_serializing_if = "Option::is_none")]
    pub latency: Option<i32>,
    /// The paused status of the job queue
    #[serde(rename = "paused", skip_serializing_if = "Option::is_none")]
    pub paused: Option<bool>,
}

impl JobQueue {
    /// the job queue info
    pub fn new() -> JobQueue {
        JobQueue {
            job_type: None,
            count: None,
            latency: None,
            paused: None,
        }
    }
}
