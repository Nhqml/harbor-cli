/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Instance {
    /// Unique ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Instance name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description of instance
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Based on which driver, identified by ID
    #[serde(rename = "vendor", skip_serializing_if = "Option::is_none")]
    pub vendor: Option<String>,
    /// The service endpoint of this instance
    #[serde(rename = "endpoint", skip_serializing_if = "Option::is_none")]
    pub endpoint: Option<String>,
    /// The authentication way supported
    #[serde(rename = "auth_mode", skip_serializing_if = "Option::is_none")]
    pub auth_mode: Option<String>,
    /// The auth credential data if exists
    #[serde(rename = "auth_info", skip_serializing_if = "Option::is_none")]
    pub auth_info: Option<::std::collections::HashMap<String, String>>,
    /// The health status
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// Whether the instance is activated or not
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// Whether the instance is default or not
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<bool>,
    /// Whether the instance endpoint is insecure or not
    #[serde(rename = "insecure", skip_serializing_if = "Option::is_none")]
    pub insecure: Option<bool>,
    /// The timestamp of instance setting up
    #[serde(rename = "setup_timestamp", skip_serializing_if = "Option::is_none")]
    pub setup_timestamp: Option<i64>,
}

impl Instance {
    pub fn new() -> Instance {
        Instance {
            id: None,
            name: None,
            description: None,
            vendor: None,
            endpoint: None,
            auth_mode: None,
            auth_info: None,
            status: None,
            enabled: None,
            default: None,
            insecure: None,
            setup_timestamp: None,
        }
    }
}
