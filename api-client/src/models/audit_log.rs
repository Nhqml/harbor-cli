/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuditLog {
    /// The ID of the audit log entry.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Username of the user in this log entry.
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// Name of the repository in this log entry.
    #[serde(rename = "resource", skip_serializing_if = "Option::is_none")]
    pub resource: Option<String>,
    /// Tag of the repository in this log entry.
    #[serde(rename = "resource_type", skip_serializing_if = "Option::is_none")]
    pub resource_type: Option<String>,
    /// The operation against the repository in this log entry.
    #[serde(rename = "operation", skip_serializing_if = "Option::is_none")]
    pub operation: Option<String>,
    /// The time when this operation is triggered.
    #[serde(rename = "op_time", skip_serializing_if = "Option::is_none")]
    pub op_time: Option<String>,
}

impl AuditLog {
    pub fn new() -> AuditLog {
        AuditLog {
            id: None,
            username: None,
            resource: None,
            resource_type: None,
            operation: None,
            op_time: None,
        }
    }
}
