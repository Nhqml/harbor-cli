/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Execution {
    /// The ID of execution
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The vendor type of execution
    #[serde(rename = "vendor_type", skip_serializing_if = "Option::is_none")]
    pub vendor_type: Option<String>,
    /// The vendor id of execution
    #[serde(rename = "vendor_id", skip_serializing_if = "Option::is_none")]
    pub vendor_id: Option<i32>,
    /// The status of execution
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// The status message of execution
    #[serde(rename = "status_message", skip_serializing_if = "Option::is_none")]
    pub status_message: Option<String>,
    #[serde(rename = "metrics", skip_serializing_if = "Option::is_none")]
    pub metrics: Option<Box<crate::models::Metrics>>,
    /// The trigger of execution
    #[serde(rename = "trigger", skip_serializing_if = "Option::is_none")]
    pub trigger: Option<String>,
    #[serde(rename = "extra_attrs", skip_serializing_if = "Option::is_none")]
    pub extra_attrs: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// The start time of execution
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
    /// The end time of execution
    #[serde(rename = "end_time", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<String>,
}

impl Execution {
    pub fn new() -> Execution {
        Execution {
            id: None,
            vendor_type: None,
            vendor_id: None,
            status: None,
            status_message: None,
            metrics: None,
            trigger: None,
            extra_attrs: None,
            start_time: None,
            end_time: None,
        }
    }
}
