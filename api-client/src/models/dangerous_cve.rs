/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// DangerousCve : the dangerous CVE information

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DangerousCve {
    /// the cve id
    #[serde(rename = "cve_id", skip_serializing_if = "Option::is_none")]
    pub cve_id: Option<String>,
    /// the severity of the CVE
    #[serde(rename = "severity", skip_serializing_if = "Option::is_none")]
    pub severity: Option<String>,
    /// the cvss score v3
    #[serde(rename = "cvss_score_v3", skip_serializing_if = "Option::is_none")]
    pub cvss_score_v3: Option<f32>,
    /// the description of the CVE
    #[serde(rename = "desc", skip_serializing_if = "Option::is_none")]
    pub desc: Option<String>,
    /// the package of the CVE
    #[serde(rename = "package", skip_serializing_if = "Option::is_none")]
    pub package: Option<String>,
    /// the version of the package
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
}

impl DangerousCve {
    /// the dangerous CVE information
    pub fn new() -> DangerousCve {
        DangerousCve {
            cve_id: None,
            severity: None,
            cvss_score_v3: None,
            desc: None,
            package: None,
            version: None,
        }
    }
}
