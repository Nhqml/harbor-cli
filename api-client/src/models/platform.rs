/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Platform {
    /// The architecture that the artifact applys to
    #[serde(rename = "architecture", skip_serializing_if = "Option::is_none")]
    pub architecture: Option<String>,
    /// The OS that the artifact applys to
    #[serde(rename = "os", skip_serializing_if = "Option::is_none")]
    pub os: Option<String>,
    /// The version of the OS that the artifact applys to
    #[serde(rename = "'os.version'", skip_serializing_if = "Option::is_none")]
    pub quote_os_period_version_quote: Option<String>,
    /// The features of the OS that the artifact applys to
    #[serde(rename = "'os.features'", skip_serializing_if = "Option::is_none")]
    pub quote_os_period_features_quote: Option<Vec<String>>,
    /// The variant of the CPU
    #[serde(rename = "variant", skip_serializing_if = "Option::is_none")]
    pub variant: Option<String>,
}

impl Platform {
    pub fn new() -> Platform {
        Platform {
            architecture: None,
            os: None,
            quote_os_period_version_quote: None,
            quote_os_period_features_quote: None,
            variant: None,
        }
    }
}
