/*
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RegistryPing {
    /// The registry ID.
    #[serde(
        rename = "id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub id: Option<Option<i64>>,
    /// Type of the registry, e.g. 'harbor'.
    #[serde(
        rename = "type",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub r#type: Option<Option<String>>,
    /// The registry URL.
    #[serde(
        rename = "url",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub url: Option<Option<String>>,
    /// Credential type of the registry, e.g. 'basic'.
    #[serde(
        rename = "credential_type",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub credential_type: Option<Option<String>>,
    /// The registry access key.
    #[serde(
        rename = "access_key",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub access_key: Option<Option<String>>,
    /// The registry access secret.
    #[serde(
        rename = "access_secret",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub access_secret: Option<Option<String>>,
    /// Whether or not the certificate will be verified when Harbor tries to access the server.
    #[serde(
        rename = "insecure",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub insecure: Option<Option<bool>>,
}

impl RegistryPing {
    pub fn new() -> RegistryPing {
        RegistryPing {
            id: None,
            r#type: None,
            url: None,
            credential_type: None,
            access_key: None,
            access_secret: None,
            insecure: None,
        }
    }
}
